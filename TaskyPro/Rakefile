require 'albacore'
require 'fileutils'
require 'rubygems'
require 'fileutils'

# utility functions for manipulating environment variables
def set_env(key, value)
  if false == value
    value = 'FALSE'
  elsif true == value
    value = 'TRUE'
  end
  ENV[key.to_s.upcase] = value
end

def get_env(key)
  val = ENV[key.to_s.upcase]
  if 'FALSE' == val
    val = false
  elsif 'TRUE' == val
    val = true
  end
  val
end

# Specify the device to use (in case there are multiple devices attached to computer)
#set_env(:adb_device_arg, '192.168.56.101:5555') # Genymotion, Galaxy S4 w/Android 4.2.2
#set_env(:adb_device_arg, 'HT9CXP812164')        # Hardware, Nexus One
#set_env(:adb_device_arg, '0149B2EC03012005')    # Hardware, Galaxy Nexus
set_env(:adb_device_arg, '192.168.56.102:5555') # Genymotion, Nexus 4 w/Android 4.3

task :default => [:clean, :build]

desc "Cleans the project"
task :clean => [:clean_screenshots] do
  directories_to_delete = [
      "./bin",
      "./obj",
      "./screenshots",
      "./test_servers",
      "./testresults.html"
  ]

  directories_to_delete.each { |x|
    rm_rf x
  }
end

desc "Delete the existing screen shots and calabash reports."
task :clean_screenshots do
  directories_to_delete = [
      "./screenshots/",
  ]

  directories_to_delete.each { |directory|
    rm_rf directory
  }
end

desc "Compiles a Release version of the project for Android."
xbuild :build_android => [:clean] do |csproject|
  csproject.solution = "./Tasky.Android/Tasky.Android.csproj"
  csproject.properties = {:configuration => :release}
  csproject.targets [:Clean, :Build, :SignAndroidPackage]
end

desc "Compiles the project for iOS"
task :build_ios => [:clean] do
  `/Applications/Xamarin\\ Studio.app/Contents/MacOS/mdtool -v build "--configuration:Debug|iPhone" TaskyMD_Mac.sln`
  `/Applications/Xamarin\\ Studio.app/Contents/MacOS/mdtool -v build "--configuration:Debug|iPhoneSimulator" TaskyMD_Mac.sln`

end
